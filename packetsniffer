from scapy.all import sniff, IP, TCP
from scapy.layers import http

# Define a callback function to process captured packets
def process_packet(packet):

# checks if the packet has IP and TCP layers
# extracts the source IP, destination IP, source port, and destination port
    if IP in packet and TCP in packet:
        src_ip = packet[IP].src
        dst_ip = packet[IP].dst
        src_port = packet[TCP].sport
        dst_port = packet[TCP].dport
        
# prints the details of the packet. 
        
        print(f"Source IP: {src_ip}, Source Port: {src_port}")
        print(f"Destination IP: {dst_ip}, Destination Port: {dst_port}")

        if packet.haslayer(http.HTTPRequest):
            url = packet[http.HTTPRequest].Host.decode() + packet[http.HTTPRequest].Path.decode()
            print("Potential malicious URL detected: " + url)
# extracts the requested URL and prints it as a potential malicious URL

# Start sniffing network traffic
sniff(filter="tcp", prn=process_packet)

